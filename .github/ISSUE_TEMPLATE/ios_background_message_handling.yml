name: iOS Background Message Handling
description: Create an issue for iOS background message handling.
title: "fix:  "
labels: ["bug", "triage"]
# assignees:
#   - ...
body:
  - type: markdown
    attributes:
      value: |
        Create an issue after ensuring you have understood iOS background message handling and its limitations.

  - type: checkboxes
    attributes:
      label: Is there an existing issue for this?
      description: |
        Please search to see if an issue already exists for the bug you encountered.
      options:
        - label: I have searched the existing issues.
          required: true

  - type: checkboxes
    attributes:
      label: Do you have an active Apple Developer account?
      description: |
        An [Apple Developer account](https://developer.apple.com/membercenter/index.action) is required for handling background messages.
      options:
        - label: I have an active Apple Developer account.
          required: true

  - type: checkboxes
    attributes:
      label: Are you using a physical iOS device to test background messages?
      description: |
        A physical device is required for testing background messages, it will not work on a simulator.
      options:
        - label: I am using a physical iOS device to test background messages.
          required: true

  - type: textarea
    attributes:
      label: Have you enabled "Remote Notifications" & "Background Mode" (Checking options for "Background Processing" & "Remote Notifications") in your app's Xcode project?
      description: |
        Find out how to enable "Remote Notifications" & "Background Mode" in the [documentation](https://firebase.google.com/docs/cloud-messaging/flutter/client#enable_app_capabilities_in_xcode)

        For illustration, your Xcode project "Signing and Capabilities" settings should look like this:
        ![Xcode "Signing and Capabilities tab"](https://github.com/firebase/flutterfire/blob/master/.github/images/remote-notifications-enable.png)

        REQUIRED: Please provide a screenshot of your Xcode project "Signing and capabilities" settings.
    validations:
      required: true

  - type: checkboxes
    attributes:
      label: Have you created an APNs certificate in your Apple Developer account & uploaded this APNs certificate to your Firebase console?
      description: |
        You have to create an APNs certificate in your [Apple Developer account](https://developer.apple.com/membercenter/index.action) & upload this APNs certificate to your [Firebase console](https://console.firebase.google.com)? [See documentation](https://firebase.google.com/docs/cloud-messaging/flutter/client#upload_your_apns_authentication_key).
      options:
        - label: I have enabled "Remote Notifications" & "Background Mode" (Checking options for "Background Processing" & "Remote Notifications") in my Xcode project.
          required: true

  - type: textarea
    attributes:
      label: Have you enabled method swizzling in your app?
      description: |
        Go to your "Info.plist" file and add the following key `FirebaseAppDelegateProxyEnabled` with a value of `YES`.

        REQUIRED: Please paste your Info.plist in the text area.
    validations:
      required: true

  - type: textarea
    attributes:
      label: Are you sending messages to your app from the Firebase Admin SDK?
      description: |
        For an example of sending messages to your app, please see [FlutterFire's nodejs Firebase Admin SDK script](https://github.com/firebase/flutterfire/blob/master/packages/firebase_messaging/firebase_messaging/example/scripts/send-message.js)
        FlutterFire does not support sending messages from 3rd party packages.

        It is essential you include the `contentAvailable` flag in your message payload when sending messages to your app from the Firebase Admin SDK.

        Example:
        ```js
        admin
          .messaging()
          .sendToDevice(
            [token],
            {
              data: {
                foo:'bar',
              },
              notification: {
                title: 'A great title',
                body: 'Great content',
              },
            },
            {
              // Required for background/terminated app state messages on iOS
              contentAvailable: true,
            }
          )
        ```

        REQUIRED: Please paste the code snippet in the text area you're using to sending messages to your app from the Firebase Admin SDK.
    validations:
      required: true

  - type: textarea
    attributes:
      label: Have you used the console app on your macOS computer to check if the iOS device's system is throttling your background messages?
      description: |
        To check the status of your push notification, please follow the steps below.
          1. Open the `Console` app on your Mac
          2. Select your iPhone from the devices list on the left hand side
          3. Filter messages by typing in your Bundle ID (e.g. The Firebase Messaging example app bundle ID is 'io.flutter.plugins.firebase.messaging') into the search box and pressing enter.
          4. Press the clear button to clean the history.
          5. Now send the message to your device
          6. Select all the rows on the logs & copy them, Cmd + C (not available on right-click menu)

          [Example of successfully delivered data-only background message](https://github.com/firebase/flutterfire/blob/master/.github/images/ios-background-message-delivered.png)
          [Example of unsuccessfully delivered data-only background message](https://github.com/firebase/flutterfire/blob/master/.github/images/ios-background-message-not-delivered.png)

          REQUIRED: Please paste your logs in the text area so we can see a successful message delivered not being received by the background message handler.
    validations:
      required: true


